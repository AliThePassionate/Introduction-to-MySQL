---------------How to Select Database-------------
USE <Dbname> || use <Dbname>
USE mydb || use mydb


---------------How to Select all Table fields in Database using "*" -------------
1.First Select Database
2.Select table
3.Also use semicolon ; at the end of each statement
USE mydb;
SELECT * FROM customer;


---------------How to Select and filter a specific row using WHERE Clause-------------
USE mydb;
SELECT * 
FROM customer
WHERE customer_id = 5;


---------------How to Select Table and sort using First_name with ORDER BY Clause-------------
USE mydb;
SELECT * 
FROM customer
-- WHERE customer_id = 5  "--" Double Hyphen is used to comment something
ORDER BY first_name;


---------------How to Select a specific fields with field name-------------
SELECT first_name, last_name , points FROM customer;


---------------How to Select a specific fields with field name and calculate something in run time-------------
SELECT first_name, last_name , points, points+10 FROM customer;


---------------Select specific field and calculate something but change calculated name in run time with AS Alias-------------
SELECT first_name, last_name , points, (points+10)*100 AS discount_factor FROM customer;


---------------if you want to add Space in Alias name-------------
SELECT first_name, last_name , points, (points+10)*100 AS 'Discount Factor' FROM customer;


---------------How to select only unique and non duplicate value ---------------
SELECT DISTINCT city FROM customer;
-- Make sure if you use SELECT DISTINCT first_name, city FROM customer it means both first_name and city
must be distinct. It does not mean that only the city column should be distinct.


---------------How to filter with WHERE Clause-------------
SELECT * FROM customer WHERE points>1500; 
-- filter those records whose points are greater than 1500
-- Also you should use these operators >,<,>=,<=,!=, <> 


---------------How to filter string matched record with WHERE Clause-------------
SELECT * FROM customer WHERE city = 'karachi'; 


---------------How to filter those records which does not contain string 'karachi'-------------
SELECT * FROM customer WHERE city != 'karachi'; 
or 
SELECT * FROM customer WHERE city <> 'karachi';


---------------How to filter those records whose birth_date > 2023-08-07-------------
SELECT * FROM customer WHERE birth_date > '2023-08-07';


---------------How to filter those records whose birth_date > 2023-08-07 and Points > 1500------------
-- We use AND operator it return true if both condition meets true
SELECT * FROM customer WHERE birth_date > '2023-08-07' AND points > 1500;


---------------How to filter those records whose birth_date > 2023-08-07 OR Points > 1500------------
-- We use OR operator it return true if at least one  condition meets true
SELECT * FROM customer WHERE birth_date > '2023-08-07' OR points > 1500;


---------------How to filter those records whose birth_date > 2023-08-07 is NOT Greater than ------------
-- We use NOT operator to reverse
SELECT * FROM customer WHERE NOT(birth_date > '2023-08-07' OR points > 1500);


---------------How to filter those records whose birth_date > 2023-08-07 OR Points > 1500 AND city ="kohat"------------
-- We use OR and AND both to add multiple conditions
SELECT * FROM customer WHERE birth_date > '2023-08-07' OR (points > 1500 AND city = 'kohat');


---------------How to select those result whose city is kohat or karachi------------
-- We use IN operator, we can also use OR operator but IN operator is shorter and it works like OR operator 
SELECT * FROM customer WHERE city IN ('karachi','kohat');


---------------How to select those result whose city is not in kohat or karachi------------
-- We use NOT IN operator
SELECT * FROM customer WHERE city NOT IN ('karachi','kohat');


---------------How to select those points >= 1000 and <= 1500------------
-- We use BETWEEN operator, note we can also use >=  <= operators but BETWEEN is shorter
SELECT * FROM customer WHERE points BETWEEN 1000 AND 1500;


---------------How to select those rows that matched with specific string pattern using LIKE operator------------
-- we use WHERE last_name LIKE 's%' it means last_name must be start with s but after s it contain any letters.
SELECT * FROM customer WHERE last_name LIKE 's%';
SELECT * FROM customer WHERE last_name LIKE 'summer%'; //start with summer ends with any letter


-----------change the pattern in LIKE operator-----------
SELECT * FROM customer WHERE last_name LIKE '%s';// start with any  letter but ends with s
SELECT * FROM customer WHERE last_name LIKE '%s%';// start with any  letter and ends with any letter but s letter can be any
where


-----------Use underscore to define how many letters end with that pattern-----------
SELECT * FROM customer WHERE last_name LIKE '_______s'


-----------we can also specify first and last letter and Between letters range with "__"  underscore-----------
SELECT * FROM customer WHERE last_name LIKE 'v______s'


-----------use  REGEXP to use complex string pattern-----------
-- Look we use like operator
SELECT * FROM customer WHERE first_name LIKE '%hr%'
--we can also use REGEXP for more complex string patterns
SELECT * FROM customer WHERE first_name REGEXP 'hr'

-----------first_name must start with hr-----------
SELECT * FROM customer WHERE first_name REGEXP '^ch'


-----------first_name must end with t-----------
SELECT * FROM customer WHERE first_name REGEXP 't$'


-----------we can also use pipe operator | in REGEXP-----------
SELECT * FROM customer WHERE first_name REGEXP '^ch|t$'
--it means first_name must start with ch 
--Or first_name must end with t


-----------we can also specify []-----------
SELECT * FROM customer WHERE first_name REGEXP '[agc]t'
-- first_name will be at, gt, ct anywhere

-----------we can change pattern-----------
SELECT * FROM customer WHERE first_name REGEXP 't[agc]'
-- first_name will be ta, tg, tc anywhere

-----------we can also specify range [a-h]-----------
SELECT * FROM customer WHERE first_name REGEXP '[a-h]t'
-- first_name will be at,bt,ct,dt,et,ft, gt, ht anywhere

-----------How to select those records whone phone no is NULL using "IS NULL" operator -----------
SELECT * FROM customer WHERE phone IS NULL;

-----------How to select and sort data by column name ----------
-- by default every column is sorted according  to primary key column
SELECT * FROM customer ORDER by first_name;

----------We can also sort by multiple columns-----------
SELECT * FROM customer ORDER by first_name, last_name;


----------We can also sort by multiple columns in Descending order-----------
SELECT * FROM customer ORDER by first_name DESC, last_name ASC;


----------How  to Select first 10 records using "LIMIT" Clause-----------
SELECT * FROM customer LIMIT 10;


----------How to skip  first 10 records using "LIMIT" Clause and select 3 records before 10 records----------
--we define offset 10 , 3
SELECT * FROM customer LIMIT 10 , 3;

----------How to select one table with relationship to another table using "INNER JOIN"----------
-- lets we have orders table in orders table we have customer_id which is a foriegn key to customer table
--  In Orders table we have  orders_id, customer_id, status, comments
-- In Customer table we have customer_id, first_name, last_name, birth_date, phone, address, city and state
-- We want to inner join with orders table and customer table
SELECT * FROM orders INNER JOIN customerON orders.customer_id  = customer.customer_id;


---------How to find only select first_name, city and phone from customer table -----------
SELECT order_id, orders.customer_id first_name, phone, city 
FROM orders 
INNER JOIN customer
ON 
orders.customer_id  = customer.customer_id;


---------We can also use alias in inner join -----------
SELECT order_id, o.customer_id first_name, phone, city 
FROM orders o
INNER JOIN customer c
ON 
o.customer_id  = c.customer_id;


---------We to join tables across Databases -----------
-- suppose we have a Database name inventory
-- In the inventory db we have products table
-- this product table is associated with orders_items 
-- we can easily join using db.table name
select * 
FROM orders_items oi
INNER JOIN inventory.products p
ON
oi.product_id = p.product_id;


---------How to select only selected name, quantity from products table -----------
select oi.product_id, unit_price, name
FROM orders_items oi
INNER JOIN inventory.products p
ON
oi.product_id = p.product_id;

